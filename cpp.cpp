#include <iostream>

using namespace std;
//Объявление  функции перемножения матриц - используя  параметры языка Ассемблера 
extern "C" int mul_matrix(int* A, int* B, int* C, int m, int n, int l);

//Вывод матрицы на экран
void PrintMatrix(int* mat, int m, int n) //размерность матрицы m(строки)  на n(стобцы)
{
    for (int i = 0; i < m; i++)    //Цикл по переменной i, в котором перебираются строки матрицы
    {
        for (int j = 0; j < n; j++)    //Цикл по переменной j, в котором перебираем  столбцы матрицы
        {
            int k = i * n + j;      //Обращемся к индексу элемента матрицы  n- количество элементов
            cout << mat[k] << "  "; //Вывод элементов матрицы по индексу,разделение-два пробела
        }
        cout << endl; //Перевод на следующую строку
    }
}

// Генерация матрицы
void GenerateMatrix(int* mat, int m, int n)
{
    for (int i = 0; i < m; i++)  //Цикл по переменной, в которой перебираются строки матрицы 
    {
        for (int j = 0; j < n; j++) //Цикл по переменной, в которой перебираются стобцы матрицы
        {
            int k = i * n + j;  //Обращемся к индексу элемента матрицы n-количество элементов
            mat[k] = rand() % 10;   //Заполняем матрицу  рандомными значениями  от 0 до 9
        }
    }
}


int main()
{
    srand(time(0)); //Инициализация генератора случайных чисел,time-возвращает текущее время системы

    // Размерность матриц
    const int M = 4;     //для перемножения- кол-во столбцов первой матрицы должно быть равно кол-во строк второй матрицы C=ML
    const int N = 2;
    const int L = 3;

    // Матрицы 
    int A[M * N]; //Перемножаем размерности матриц- находим кол-во элементов и выделяем кол-во ячеек для хранения  впамяти
    int B[N * L];
    int C[M * L];

    // Генерация матрицы A и ее вывод
    GenerateMatrix(A, M, N);  //Параметры матрицы А
    cout << "Matrix A: " << endl;  //Перевод на новую строку
    PrintMatrix(A, M, N);   //Вывод матрицы А с указанными параетрами
    cout << endl;   // Перевод на новую строку

    // Геренация матрицы В и ее вывод
    GenerateMatrix(B, N, L); //Параметры матрицы B
    cout << "Matrix B: " << endl;
    PrintMatrix(B, N, L);  //Вывод матрицы с указанными строками
    cout << endl; //Перевод на новую строку

    // Перемножение матриц
    mul_matrix(A, B, C, M, N, L);  //С-итоговая матрица перемножения матриц А НА Б 

    // Вывод матрицы С
    cout << "Matrix C: " << endl;
    PrintMatrix(C, M, L);
    cout << endl;

    return 0; //Корректное завершение программы
}
